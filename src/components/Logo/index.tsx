import type { FC } from "react";
import { memo } from "react";

// import { useKamiConfig } from "~/hooks/app/use-initial-data";

export const DefaultLogo: FC<JSX.IntrinsicElements["svg"]> = memo((props) => {
  return (
    <svg viewBox="0 0 1024 1024" version="1.1" {...props}>
      <path
        d="M1000.727 556.218C1000.727 390.982 868.073 0 684.218 0 570.182 0 474.764 153.6 418.91 309.527c-44.218-65.163-93.09-102.4-141.964-102.4-153.6 0-253.672 314.182-253.672 442.182 0 132.655 102.4 239.71 230.4 251.346v86.109c0 13.963 9.309 23.272 23.272 23.272 13.964 0 23.273-9.309 23.273-23.272v-86.11c72.146-6.981 139.637-44.218 181.527-102.4 48.873 41.891 111.71 67.491 179.2 72.146v116.364c0 13.963 9.31 23.272 23.273 23.272 13.964 0 23.273-9.309 23.273-23.272V870.4c162.909-11.636 293.236-146.618 293.236-314.182zM300.218 854.11V532.945c0-13.963-9.309-23.272-23.273-23.272-13.963 0-23.272 9.309-23.272 23.272v151.273l-58.182-58.182c-9.31-9.309-23.273-9.309-32.582 0-9.309 9.31-9.309 23.273 0 32.582l90.764 90.764v104.727c-102.4-11.636-183.855-100.073-183.855-204.8 0-123.345 100.073-395.636 207.127-395.636 39.564 0 83.782 41.89 123.346 114.036-20.946 72.146-32.582 139.636-32.582 188.51 0 81.454 30.255 153.6 79.127 209.454-32.581 48.872-86.109 81.454-146.618 88.436z m407.273-30.254v-281.6l95.418-93.091c9.31-9.31 9.31-23.273 0-32.582-9.309-9.31-23.273-9.31-32.582 0l-62.836 60.509V316.509c0-13.964-9.31-23.273-23.273-23.273s-23.273 9.31-23.273 23.273v300.218L549.236 505.018c-9.309-9.309-23.272-9.309-32.581 0-9.31 9.31-9.31 23.273 0 32.582l144.29 144.29v141.965c-137.309-11.637-246.69-128-246.69-267.637 0-48.873 11.636-114.036 32.581-181.527 0-2.327 2.328-4.655 2.328-6.982C498.036 211.782 588.8 46.545 684.218 46.545c139.637 0 269.964 351.419 269.964 509.673 0 141.964-109.382 256-246.691 267.637z"
        fill="#ffffff"
        p-id="20440"
      ></path>
    </svg>
  );
});

export const CustomLogo: FC<JSX.IntrinsicElements["svg"]> = memo((props) => {
  // const {
  //   site: { logoSvg },
  // } = useKamiConfig();
  // console.log(useKamiConfig());
  const logoSvg = null;
  // FIXME: div props
  const { className, height, onAnimationEnd } = props;
  if (logoSvg) {
    return (
      <div
        className={className}
        style={{ height }}
        // @ts-expect-error: onAnimationEnd is not a valid prop for div
        onAnimationEnd={onAnimationEnd}
        dangerouslySetInnerHTML={{
          __html: logoSvg,
        }}
      />
    );
  }
  return <DefaultLogo {...props} />;
});
